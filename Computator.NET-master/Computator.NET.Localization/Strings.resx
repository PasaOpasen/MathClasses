<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Expression_should_not_be_empty_" xml:space="preserve">
    <value>Expression should not be empty!</value>
  </data>
  <data name="AddToChart" xml:space="preserve">
    <value>Add to chart</value>
  </data>
  <data name="DrawChart" xml:space="preserve">
    <value>Draw chart</value>
  </data>
  <data name="Error" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="GivenΕIsNotValidΕShouldBeSmallPositiveNumber" xml:space="preserve">
    <value>Given ε is not valid. ε should be small positive number.</value>
  </data>
  <data name="GivenΕIsNotValid" xml:space="preserve">
    <value>Given ε is not valid.</value>
  </data>
  <data name="ConsoleOutput" xml:space="preserve">
    <value>Console output:</value>
  </data>
  <data name="Features" xml:space="preserve">
    <value>Features:</value>
  </data>
  <data name="PleaseReportAnyBugsToPawełTrokaPtrokaFizykaDk" xml:space="preserve">
    <value>Please report any bugs to Paweł Troka - pawel.troka@outlook.com</value>
  </data>
  <data name="BugReporting" xml:space="preserve">
    <value>Bug reporting</value>
  </data>
  <data name="Chart" xml:space="preserve">
    <value>Chart</value>
  </data>
  <data name="ItSFeaturesInclude" xml:space="preserve">
    <value>It's features include:</value>
  </data>
  <data name="Source_" xml:space="preserve">
    <value>source:</value>
  </data>
  <data name="ErrorInExpressionSyntaxOneOfUsedFunctionsDoesNotExistIsIncompatibleWithGivenArgumentsOrYouJustMadeAMistakeWritingExpression" xml:space="preserve">
    <value>Error in expression syntax. One of used functions does not exist / is incompatible with given arguments or you just made a mistake writing expression.</value>
  </data>
  <data name="Details" xml:space="preserve">
    <value>Details: </value>
  </data>
  <data name="MoreDetails" xml:space="preserve">
    <value>More details: </value>
  </data>
  <data name="NoFunctionToInvoke" xml:space="preserve">
    <value>No function to invoke</value>
  </data>
  <data name="featuresInclude" xml:space="preserve">
    <value> - Real and complex functions charts

 - Real and complex calculator

 - Real functions numerical calculations including different methods

 - Over 107 Elementary functions

 - Over 141 Special functions

 - Over 21 Matrix functions and operations

 - Scripting language with power to easy computations including matrices

 - You can declare your own custom functions with scripting language</value>
  </data>
  <data name="MemoryAllocationSpeedTestCancelledByUser" xml:space="preserve">
    <value>Memory allocation speed test cancelled by user</value>
  </data>
  <data name="MemoryAllocationSpeedTestDoneSuccesfullyCheckOutYourPointsResult" xml:space="preserve">
    <value>Memory allocation speed test done succesfully, check out your points result</value>
  </data>
  <data name="Done" xml:space="preserve">
    <value>Done!</value>
  </data>
  <data name="Result" xml:space="preserve">
    <value> result: </value>
  </data>
  <data name="Points" xml:space="preserve">
    <value> Points!</value>
  </data>
  <data name="Canceled" xml:space="preserve">
    <value>Canceled!</value>
  </data>
  <data name="MathFunctionsCalculationSpeedTestDoneSuccesfullyCheckOutYourPointsResults" xml:space="preserve">
    <value>Math functions calculation speed test done succesfully! Check out your points results!</value>
  </data>
  <data name="MathFunctionsCalculationSpeedTestCancelledByUser" xml:space="preserve">
    <value>Math functions calculation speed test cancelled by user.</value>
  </data>
  <data name="librariesUsed" xml:space="preserve">
    <value>libraries used</value>
  </data>
  <data name="betaTesters" xml:space="preserve">
    <value>beta testers</value>
  </data>
  <data name="otherContributors" xml:space="preserve">
    <value>other contributors</value>
  </data>
  <data name="translators" xml:space="preserve">
    <value>translators</value>
  </data>
  <data name="SpecialThanksTo" xml:space="preserve">
    <value>Special thanks to:</value>
  </data>
  <data name="XYRatio0" xml:space="preserve">
    <value>  |  X/Y ratio = {0}  |</value>
  </data>
  <data name="Only_Real_mode_is_supported_in_Numerical_calculations_right_now__more_to_come_in_next_versions_" xml:space="preserve">
    <value>Only Real mode is supported in Numerical calculations right now, more to come in next versions!</value>
  </data>
  <data name="Check__Real___f_x___mode" xml:space="preserve">
    <value>-Check "Real : f(x)" mode</value>
  </data>
  <data name="Warning_" xml:space="preserve">
    <value>Warning!</value>
  </data>
  <data name="You_dont_have_any_logs_yet_" xml:space="preserve">
    <value>You dont have any logs yet.</value>
  </data>
  <data name="Changelog" xml:space="preserve">
    <value>Changelog</value>
  </data>
  <data name="Directory_tree_New_file" xml:space="preserve">
    <value>New file</value>
  </data>
  <data name="Rename_file" xml:space="preserve">
    <value>Rename file</value>
  </data>
  <data name="Delete_file" xml:space="preserve">
    <value>Delete file</value>
  </data>
  <data name="Label_Edit_error" xml:space="preserve">
    <value>Label edit error</value>
  </data>
  <data name="InvalidLabel" xml:space="preserve">
    <value>Invalid label.
</value>
  </data>
  <data name="The_label_cannot_be_blank" xml:space="preserve">
    <value>The label cannot be blank</value>
  </data>
  <data name="The_invalid_characters_are" xml:space="preserve">
    <value>The invalid characters are: '@','.', ',', '!'</value>
  </data>
  <data name="Program_Application_ThreadException_Unhandled_Thread_Exception" xml:space="preserve">
    <value>Unhandled Thread Exception</value>
  </data>
  <data name="Unhandled_UI_Exception" xml:space="preserve">
    <value>Unhandled UI Exception</value>
  </data>
  <data name="Number_of_steps_should_be_small__default_is_6" xml:space="preserve">
    <value>Number of steps should be small, default is 6</value>
  </data>
  <data name="Functions_and_Constants_Details" xml:space="preserve">
    <value>Functions &amp; Constants Details</value>
  </data>
  <data name="New_tab" xml:space="preserve">
    <value>New tab</value>
  </data>
  <data name="Clone_tab" xml:space="preserve">
    <value>Clone tab</value>
  </data>
  <data name="Close_tab" xml:space="preserve">
    <value>Close tab</value>
  </data>
  <data name="Close_other_tabs" xml:space="preserve">
    <value>Close other tabs</value>
  </data>
  <data name="Close_tabs_to_the_right" xml:space="preserve">
    <value>Close tabs to the right</value>
  </data>
  <data name="Close_tabs_to_the_left" xml:space="preserve">
    <value>Close tabs to the left</value>
  </data>
  <data name="Image_Filter" xml:space="preserve">
    <value>Png Image (.png)|*.png|Gif Image (.gif)|*.gif|JPEG Image (.jpeg)|*.jpeg|Bitmap Image (.bmp)|*.bmp|Tiff Image (.tiff)|*.tiff|Wmf Image (.wmf)|*.wmf</value>
  </data>
  <data name="AddTab_NewFile" xml:space="preserve">
    <value>NewFile</value>
  </data>
  <data name="GlobalConfig_others_standard_algorithm_for_complex_domain_coloring" xml:space="preserve">
    <value>standard algorithm for complex domain coloring</value>
  </data>
  <data name="GlobalConfig_others_Chart3D_classes_are_based_on_code_from_High_performance_WPF_3D_Chart_rev_6_application_on" xml:space="preserve">
    <value>Chart3D classes are based on code from High performance WPF 3D Chart rev.6 application on license</value>
  </data>
  <data name="GlobalConfig_assemblyDescription_Computator_NET_is_a_special_kind_of_numerical_software_that_is_fast_and_easy_to_use_but_not_worse_than_others_feature_wise_" xml:space="preserve">
    <value>Computator.NET is a special kind of numerical software that is fast and easy to use but not worse than others feature-wise.</value>
  </data>
  <data name="Or_even_better_report_them_on_project_site__using_link_below" xml:space="preserve">
    <value>Or even better report them on project site, using link below</value>
  </data>
  <data name="Syntax_error" xml:space="preserve">
    <value>Syntax error</value>
  </data>
  <data name="Internal_errors" xml:space="preserve">
    <value>Internal errors</value>
  </data>
  <data name="Custom_functions_errors" xml:space="preserve">
    <value>Custom functions errors</value>
  </data>
  <data name="Expression_errors" xml:space="preserve">
    <value>Expression errors</value>
  </data>
  <data name="Script_errors" xml:space="preserve">
    <value>Script errors</value>
  </data>
  <data name="NativeCompiler_Line" xml:space="preserve">
    <value>Line</value>
  </data>
  <data name="NativeCompiler_Column" xml:space="preserve">
    <value>Column</value>
  </data>
  <data name="NativeCompiler_warning" xml:space="preserve">
    <value>warning</value>
  </data>
  <data name="NativeCompiler_error" xml:space="preserve">
    <value>error</value>
  </data>
  <data name="Exception_during_startup" xml:space="preserve">
    <value>Exception during startup</value>
  </data>
  <data name="Program_CurrentDomain_UnhandledException_Try_installing_font_" xml:space="preserve">
    <value>Try installing font!</value>
  </data>
  <data name="Exception" xml:space="preserve">
    <value>exception</value>
  </data>
  <data name="Exception_occcured_in" xml:space="preserve">
    <value>Exception occcured in</value>
  </data>
  <data name="at_line" xml:space="preserve">
    <value>at line</value>
  </data>
  <data name="Reason" xml:space="preserve">
    <value>Reason</value>
  </data>
  <data name="Error_code" xml:space="preserve">
    <value>Error code</value>
  </data>
  <data name="trapezoidal_method" xml:space="preserve">
    <value>trapezoidal method</value>
  </data>
  <data name="rectangle_method" xml:space="preserve">
    <value>rectangle method</value>
  </data>
  <data name="Simpson_s_method" xml:space="preserve">
    <value>Simpson's method</value>
  </data>
  <data name="double_exponential_transformation" xml:space="preserve">
    <value>double exponential transformation</value>
  </data>
  <data name="Monte_Carlo_method" xml:space="preserve">
    <value>Monte Carlo method</value>
  </data>
  <data name="Romberg_s_method" xml:space="preserve">
    <value>Romberg's method</value>
  </data>
  <data name="Integral" xml:space="preserve">
    <value>Integral</value>
  </data>
  <data name="Derivative" xml:space="preserve">
    <value>Derivative</value>
  </data>
  <data name="Function_root" xml:space="preserve">
    <value>Function root</value>
  </data>
  <data name="centered_order_point_method" xml:space="preserve">
    <value>centered order-point method</value>
  </data>
  <data name="finite_difference_formula" xml:space="preserve">
    <value>finite difference formula</value>
  </data>
  <data name="two_point_finite_difference_formula" xml:space="preserve">
    <value>two-point finite difference formula</value>
  </data>
  <data name="stable_finite_difference_formula" xml:space="preserve">
    <value>stable finite difference formula</value>
  </data>
  <data name="centered_five_point_method" xml:space="preserve">
    <value>centered five-point method</value>
  </data>
  <data name="bisection_method" xml:space="preserve">
    <value>bisection method</value>
  </data>
  <data name="secant_method" xml:space="preserve">
    <value>secant method</value>
  </data>
  <data name="Brent_s_method" xml:space="preserve">
    <value>Brent's method</value>
  </data>
  <data name="Broyden_s_method" xml:space="preserve">
    <value>Broyden's method</value>
  </data>
  <data name="secant_Newton_Raphson_method" xml:space="preserve">
    <value>secant Newton Raphson method</value>
  </data>
  <data name="non_adaptive_Gauss_Kronrod_method" xml:space="preserve">
    <value>non-adaptive Gauss–Kronrod method</value>
  </data>
  <data name="infinity_adaptive_Gauss_Kronrod_method" xml:space="preserve">
    <value>infinity-adaptive Gauss–Kronrod method</value>
  </data>
  <data name="Chart3D_is_not_supported_on_Mono" xml:space="preserve">
    <value>Chart3D is not supported on Mono</value>
  </data>
  <data name="NeedsToBeGreaterThan" xml:space="preserve">
    <value>needs to be greater than</value>
  </data>
  <data name="NeedsToBeLessThan" xml:space="preserve">
    <value>needs to be less than</value>
  </data>
  <data name="Min_value_needs_to_be_less_than_Max_value" xml:space="preserve">
    <value>Min value needs to be less than Max value.</value>
  </data>
  <data name="CheckChartAreaValues" xml:space="preserve">
    <value>Check chart area values</value>
  </data>
</root>